<<<<<<< HEAD
SHELL=/bin/bash
PATH=/home/pi/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games
=======

SHELL=/bin/bash
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games

>>>>>>> 9449b0cd6cd3f1def65e92fe2ac9d36c76fac5ee

# Below line kills it if it runs more than 10 minutes
*/10 * * * * killall -g --older-than 10m openaps 

<<<<<<< HEAD
# Below line resets git repository every 3 minute in order to automatically resolve git corruption
*/3 * * * * cd /home/pi/myopenaps && oref0-reset-git 
=======
# Below line will wait if processing is already running, duplicate cron job executions

# Below line resets git repository every 3 minute in order to automatically resolve git corruption
*/3 * * * * cd /home/pi/myopenaps && oref0-reset-git &2> /dev/null
>>>>>>> 9449b0cd6cd3f1def65e92fe2ac9d36c76fac5ee

# Below line runs loop every 5 minutes if a loop is not already running
*/5 * * * * cd /home/pi/myopenaps && openaps loop &>> /tmp/output

<<<<<<< HEAD
# Below line runs mmtune twice an hour
9 * * * * cd /home/pi/myopenaps && openaps mmtune
39 * * * * cd /home/pi/myopenaps && openaps mmtune

# Below line copies crontab to myopenaps backup file  and then deletes secret information once per hour

# Below line sends git repository to github (one minute after crontab backup runs in the previous line)
1 * * * * cd /home/pi/myopenaps && ./git.run

=======
# Below line copies crontab to myopenaps backup file  and then deletes secret information once per hour

# Below line sends git repository to github
0 * * * * cd /home/pi/myopenaps && sh git.run
>>>>>>> 9449b0cd6cd3f1def65e92fe2ac9d36c76fac5ee
